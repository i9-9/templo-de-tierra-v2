generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public", "auth"]
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type             String
  provider         String
  providerAccountId String
  refresh_token    String? @db.Text
  access_token     String? @db.Text
  expires_at       Int?
  token_type       String?
  scope            String?
  id_token         String? @db.Text
  session_state    String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@schema("public")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("public")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean    @default(false)
  createdAt     DateTime   @default(now())
  accounts      Account[]
  sessions      Session[]
  reservas      Reserva[]
  favoritos     Favorito[]

  @@schema("public")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@schema("public")
}

model Templo {
  id              String     @id @default(cuid())
  nombre          String
  slug            String     @unique
  descripcion     String
  descripcionCorta String
  capacidad       Int
  precio          Decimal    @db.Decimal(10, 2)
  amenities       String[]
  camas           String[]
  imagenPrincipal String
  imagenes        String[]
  destacado       Boolean    @default(false)
  reservas        Reserva[]
  favoritos       Favorito[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@schema("public")
}

model Experiencia {
  id             String   @id @default(cuid())
  titulo         String
  subtitulo      String
  descripcion    String
  imagen         String
  disponibilidad String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@schema("public")
}

model Reserva {
  id             String        @id @default(cuid())
  fechaInicio    DateTime
  fechaFin       DateTime
  numeroHuespedes Int
  precioTotal    Decimal      @db.Decimal(10, 2)
  estado         EstadoReserva @default(PENDIENTE)
  metodoPago     MetodoPago
  notas          String?
  templo         Templo        @relation(fields: [temploId], references: [id])
  temploId       String
  user           User          @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  @@schema("public")
}

model Favorito {
  id        String   @id @default(cuid())
  templo    Templo   @relation(fields: [temploId], references: [id])
  temploId  String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())

  @@unique([temploId, userId])
  @@schema("public")
}

enum EstadoReserva {
  PENDIENTE
  CONFIRMADA
  CANCELADA

  @@schema("public")
}

enum MetodoPago {
  TARJETA
  TRANSFERENCIA
  EFECTIVO

  @@schema("public")
}
